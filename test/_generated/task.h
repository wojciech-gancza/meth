// Place your copyright here

// File generated by code metagenerator from
// - file: 	    ./test/_generated/task.h
// - generator: ../C:/Users/wgan/Desktop/WGan/PROGRAMOWANIE/meth/source/simple_data_objects.py
// - template:  ./templates/simple_data_objects/composite_type.h.template

#include <type_traits>

#include "story_points.h"
#include "comment.h"
#include "type.h"

namespace Data
{
    class Task
	{
		public:
			Task
			:	StoryPoints,
			 	Comment,
			 	Type
			{   }

			template <class T> void setFrom(const T& object)
			{
				if(std::is_base_of<T, type.CamelCase()}>::value)
					setStoryPoints(object.getStoryPoints());
				if(std::is_base_of<T, type.CamelCase()}>::value)
					setComment(object.getComment());
				if(std::is_base_of<T, type.CamelCase()}>::value)
					setType(object.getType());
			}
	};
}
