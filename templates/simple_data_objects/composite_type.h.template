// Place your copyright here

// File generated by code metagenerator from
// - file: 	    ${output_file_name_and_path}
// - generator: ${generator_name_and_path}
// - template:  ${template_name_and_path}

#include <type_traits>

${#FOR type : element_types}
#include "${type.lowercase()}.h"
${#END}

namespace ${namespace}
{
    class ${type_name}
	{
		public:
			${type_name}
			:	${ [type.CamelCase() for type in element_types] }
			{   }
			
			template <class T> void setFrom(const T& object)
			{
${#FOR type : element_types}
				if(std::is_base_of<T, type.CamelCase()}>::value)
					set${type.CamelCase()}(object.get${type.CamelCase()}());
${#END}
			}
	};
	
}
